.Start:
        jmp     .A
        stdcall Screen.bkgClear
        stdcall Chip.Draw, [x_pos], [y_pos]
        stdcall Box.Create, Boxes_coordinates


        stdcall Keyboard.KeyPressInt16

.Esc:
        cmp     ax, KEY_ESCAPE
        je      .end
.Space:
        cmp     ax, KEY_SPACE
        jne     .upbox
        stdcall Phys.Jump
       ; mov      [JumpFlag], True
.upbox: ; press Q
       stdcall PressQ
       cmp     ax, QUIT
       je      .end
.moveKeys:
        stdcall Chip.KeyMove

        stdcall Phys.Falling
@@:
        cmp    ax, QUIT
        jne     .Start



; in DX we need to put our key code before calling procedure
proc    PushingBox
        cmp     dx, KEY_D
        jne     @F
        stdcall Chip.PushBox, boxForward

@@:
        cmp     dx, KEY_A
        jne     .end
        stdcall Chip.PushBox, boxBack
.end:
        ret
endp

proc    PressQ uses di
        cmp     ax, KEY_Q
        jne     .end

        cmp    [boxUpped], True
        jne     .checkLift
;case when we have box on head
        mov   dx, [prev_key]
        stdcall PushingBox
        jmp .end
;case when we don't
.checkLift:
         stdcall CheckLift
.end:

         ret
endp    